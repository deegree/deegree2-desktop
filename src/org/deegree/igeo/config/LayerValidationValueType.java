//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.1-b02-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.04.15 at 10:29:06 AM MESZ 
//


package org.deegree.igeo.config;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;


/**
 * <p>Java class for LayerValidationValueType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="LayerValidationValueType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="NoIntersectingGeometries"/>
 *     &lt;enumeration value="PointsAndMultiPointsOnly"/>
 *     &lt;enumeration value="PointsOnly"/>
 *     &lt;enumeration value="CurvesAndMultiCurvesOnly"/>
 *     &lt;enumeration value="CurvesOnly"/>
 *     &lt;enumeration value="SurfacesAndMultiSurfacesOnly"/>
 *     &lt;enumeration value="SurfacesOnly"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlEnum
public enum LayerValidationValueType {

    @XmlEnumValue("NoIntersectingGeometries")
    NO_INTERSECTING_GEOMETRIES("NoIntersectingGeometries"),
    @XmlEnumValue("PointsAndMultiPointsOnly")
    POINTS_AND_MULTI_POINTS_ONLY("PointsAndMultiPointsOnly"),
    @XmlEnumValue("PointsOnly")
    POINTS_ONLY("PointsOnly"),
    @XmlEnumValue("CurvesAndMultiCurvesOnly")
    CURVES_AND_MULTI_CURVES_ONLY("CurvesAndMultiCurvesOnly"),
    @XmlEnumValue("CurvesOnly")
    CURVES_ONLY("CurvesOnly"),
    @XmlEnumValue("SurfacesAndMultiSurfacesOnly")
    SURFACES_AND_MULTI_SURFACES_ONLY("SurfacesAndMultiSurfacesOnly"),
    @XmlEnumValue("SurfacesOnly")
    SURFACES_ONLY("SurfacesOnly");
    private final String value;

    LayerValidationValueType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static LayerValidationValueType fromValue(String v) {
        for (LayerValidationValueType c: LayerValidationValueType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
