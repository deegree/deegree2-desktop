//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.1-b02-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.04.15 at 10:29:06 AM MESZ 
//


package org.deegree.igeo.config;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * 
 * 				The View-Element defines how a project shall be visualized. 
 * 				- For a project (as stand alone application)  a FrameViewForm is mandatory 				
 * 				- the SupportedViewPlatform element defins which types of platforms/environments (like HTML, Application, JWS etc. ) are supported by a view. For standalone applications
 * 				  'Application' must be defined. 
 * 				- The Window element defines size and position of a projects GUI
 * 				- ModuleRegister enabled registration of a (sub-)module to a view. Because a module contains a view definition itself modules can be nested to create more enhanced GUIs
 * 				- A project can have a toolbar, menubar and popup-menu; if included modules should be able to add entries to these menu containers their must be defined, even if
 * 				  a project itself does not define entries
 * 			
 * 
 * <p>Java class for ViewType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ViewType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.deegree.org/project}ViewForm"/>
 *         &lt;element name="SupportedViewPlatform" type="{http://www.deegree.org/project}SupportedViewPlatformType" maxOccurs="5"/>
 *         &lt;element ref="{http://www.deegree.org/project}Window"/>
 *         &lt;element ref="{http://www.deegree.org/project}ModuleRegister" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="MenuBar" type="{http://www.deegree.org/project}MenuBarType" minOccurs="0"/>
 *         &lt;element name="PopUpMenu" type="{http://www.deegree.org/project}PopUpMenuType" minOccurs="0"/>
 *         &lt;element name="ToolBar" type="{http://www.deegree.org/project}ToolbarType" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="hasFooter" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ViewType", propOrder = {
    "viewForm",
    "supportedViewPlatform",
    "window",
    "moduleRegister",
    "menuBar",
    "popUpMenu",
    "toolBar"
})
public class ViewType {

    @XmlElement(name = "ViewForm", required = true)
    protected ViewFormType viewForm;
    @XmlElement(name = "SupportedViewPlatform", required = true)
    protected List<SupportedViewPlatformType> supportedViewPlatform;
    @XmlElement(name = "Window", required = true)
    protected WindowType window;
    @XmlElement(name = "ModuleRegister")
    protected List<ModuleRegisterType> moduleRegister;
    @XmlElement(name = "MenuBar")
    protected MenuBarType menuBar;
    @XmlElement(name = "PopUpMenu")
    protected PopUpMenuType popUpMenu;
    @XmlElement(name = "ToolBar")
    protected List<ToolbarType> toolBar;
    @XmlAttribute
    protected Boolean hasFooter;

    /**
     * Gets the value of the viewForm property.
     * 
     * @return
     *     possible object is
     *     {@link ViewFormType }
     *     
     */
    public ViewFormType getViewForm() {
        return viewForm;
    }

    /**
     * Sets the value of the viewForm property.
     * 
     * @param value
     *     allowed object is
     *     {@link ViewFormType }
     *     
     */
    public void setViewForm(ViewFormType value) {
        this.viewForm = value;
    }

    /**
     * Gets the value of the supportedViewPlatform property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the supportedViewPlatform property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSupportedViewPlatform().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SupportedViewPlatformType }
     * 
     * 
     */
    public List<SupportedViewPlatformType> getSupportedViewPlatform() {
        if (supportedViewPlatform == null) {
            supportedViewPlatform = new ArrayList<SupportedViewPlatformType>();
        }
        return this.supportedViewPlatform;
    }

    /**
     * Gets the value of the window property.
     * 
     * @return
     *     possible object is
     *     {@link WindowType }
     *     
     */
    public WindowType getWindow() {
        return window;
    }

    /**
     * Sets the value of the window property.
     * 
     * @param value
     *     allowed object is
     *     {@link WindowType }
     *     
     */
    public void setWindow(WindowType value) {
        this.window = value;
    }

    /**
     * Gets the value of the moduleRegister property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the moduleRegister property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getModuleRegister().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ModuleRegisterType }
     * 
     * 
     */
    public List<ModuleRegisterType> getModuleRegister() {
        if (moduleRegister == null) {
            moduleRegister = new ArrayList<ModuleRegisterType>();
        }
        return this.moduleRegister;
    }

    /**
     * Gets the value of the menuBar property.
     * 
     * @return
     *     possible object is
     *     {@link MenuBarType }
     *     
     */
    public MenuBarType getMenuBar() {
        return menuBar;
    }

    /**
     * Sets the value of the menuBar property.
     * 
     * @param value
     *     allowed object is
     *     {@link MenuBarType }
     *     
     */
    public void setMenuBar(MenuBarType value) {
        this.menuBar = value;
    }

    /**
     * Gets the value of the popUpMenu property.
     * 
     * @return
     *     possible object is
     *     {@link PopUpMenuType }
     *     
     */
    public PopUpMenuType getPopUpMenu() {
        return popUpMenu;
    }

    /**
     * Sets the value of the popUpMenu property.
     * 
     * @param value
     *     allowed object is
     *     {@link PopUpMenuType }
     *     
     */
    public void setPopUpMenu(PopUpMenuType value) {
        this.popUpMenu = value;
    }

    /**
     * Gets the value of the toolBar property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the toolBar property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getToolBar().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ToolbarType }
     * 
     * 
     */
    public List<ToolbarType> getToolBar() {
        if (toolBar == null) {
            toolBar = new ArrayList<ToolbarType>();
        }
        return this.toolBar;
    }

    /**
     * Gets the value of the hasFooter property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isHasFooter() {
        if (hasFooter == null) {
            return false;
        } else {
            return hasFooter;
        }
    }

    /**
     * Sets the value of the hasFooter property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setHasFooter(Boolean value) {
        this.hasFooter = value;
    }

}
