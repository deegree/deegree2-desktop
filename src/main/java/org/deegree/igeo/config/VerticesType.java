//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.1-b02-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.04.15 at 10:29:06 AM MESZ 
//


package org.deegree.igeo.config;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;


/**
 * 
 * 				 Its value defines the radius of a circle around the mouse cursor. If attributes handleNearest all vertices 
 * 				 within this circle will be considered for action. If handleNearest is true just the vertex nearest to mouse click point will be
 * 				 deleted or moved. If useNearest is true n selected vertices will be merged to the one nearest to mouse click point.
 * 		  
 * 
 * <p>Java class for VerticesType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="VerticesType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="searchRadius">
 *           &lt;complexType>
 *             &lt;simpleContent>
 *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
 *                 &lt;attribute name="uom" type="{http://www.w3.org/2001/XMLSchema}string" default="pixel" />
 *                 &lt;attribute name="val" type="{http://www.w3.org/2001/XMLSchema}float" default="25" />
 *               &lt;/extension>
 *             &lt;/simpleContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *       &lt;/sequence>
 *       &lt;attribute name="handleNearest" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *       &lt;attribute name="useNearest" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "VerticesType", namespace = "http://www.deegree.org/settings", propOrder = {
    "searchRadius"
})
public class VerticesType {

    @XmlElement(namespace = "http://www.deegree.org/settings", required = true)
    protected VerticesType.SearchRadius searchRadius;
    @XmlAttribute
    protected Boolean handleNearest;
    @XmlAttribute
    protected Boolean useNearest;

    /**
     * Gets the value of the searchRadius property.
     * 
     * @return
     *     possible object is
     *     {@link VerticesType.SearchRadius }
     *     
     */
    public VerticesType.SearchRadius getSearchRadius() {
        return searchRadius;
    }

    /**
     * Sets the value of the searchRadius property.
     * 
     * @param value
     *     allowed object is
     *     {@link VerticesType.SearchRadius }
     *     
     */
    public void setSearchRadius(VerticesType.SearchRadius value) {
        this.searchRadius = value;
    }

    /**
     * Gets the value of the handleNearest property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isHandleNearest() {
        if (handleNearest == null) {
            return false;
        } else {
            return handleNearest;
        }
    }

    /**
     * Sets the value of the handleNearest property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setHandleNearest(Boolean value) {
        this.handleNearest = value;
    }

    /**
     * Gets the value of the useNearest property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isUseNearest() {
        if (useNearest == null) {
            return false;
        } else {
            return useNearest;
        }
    }

    /**
     * Sets the value of the useNearest property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setUseNearest(Boolean value) {
        this.useNearest = value;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;simpleContent>
     *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
     *       &lt;attribute name="uom" type="{http://www.w3.org/2001/XMLSchema}string" default="pixel" />
     *       &lt;attribute name="val" type="{http://www.w3.org/2001/XMLSchema}float" default="25" />
     *     &lt;/extension>
     *   &lt;/simpleContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "value"
    })
    public static class SearchRadius {

        @XmlValue
        protected String value;
        @XmlAttribute
        protected String uom;
        @XmlAttribute
        protected Float val;

        /**
         * Gets the value of the value property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getValue() {
            return value;
        }

        /**
         * Sets the value of the value property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setValue(String value) {
            this.value = value;
        }

        /**
         * Gets the value of the uom property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getUom() {
            if (uom == null) {
                return "pixel";
            } else {
                return uom;
            }
        }

        /**
         * Sets the value of the uom property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setUom(String value) {
            this.uom = value;
        }

        /**
         * Gets the value of the val property.
         * 
         * @return
         *     possible object is
         *     {@link Float }
         *     
         */
        public float getVal() {
            if (val == null) {
                return  25.0F;
            } else {
                return val;
            }
        }

        /**
         * Sets the value of the val property.
         * 
         * @param value
         *     allowed object is
         *     {@link Float }
         *     
         */
        public void setVal(Float value) {
            this.val = value;
        }

    }

}
