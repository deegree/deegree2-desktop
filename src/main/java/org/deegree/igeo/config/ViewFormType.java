//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.1-b02-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.04.15 at 10:29:06 AM MESZ 
//


package org.deegree.igeo.config;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlType;


/**
 * 
 * 				ViewForm is the major element for defining a modules visual appearance. It contains view form definition that defines if a 
 * 				module should be rendered within its own window (FrameViewForm), as window within an inner frame container (InnerFrameViewForm)
 * 				and as  part/panel of/within a container for GUI elements (PaneViewForm).
 * 			    The Layout element defines how the GUI of a module is organized. Most modules will use NoneLayout as layout type because the
 * 			    container they are embedded defines it. This means in most cases a module is embedded within a ModuleGroup or an inner frame
 * 			    conatiner. In both cases the container defines the layout of a module. But if a module is a module group the layout defines how included
 * 			    moduled will be embedded. Possible values are:
 * 			    - SplittedLayout
 * 			    - GridLayout
 * 			    - NoneLayout
 * 			    - TabLayout
 * 			    - BorderLayout
 * 			
 * 
 * <p>Java class for ViewFormType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ViewFormType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.deegree.org/project}_AbstractViewForm"/>
 *         &lt;element ref="{http://www.deegree.org/project}Layout" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ViewFormType", propOrder = {
    "abstractViewForm",
    "layout"
})
public class ViewFormType {

    @XmlElementRef(name = "_AbstractViewForm", namespace = "http://www.deegree.org/project", type = JAXBElement.class)
    protected JAXBElement<? extends _AbstractViewFormType> abstractViewForm;
    @XmlElement(name = "Layout")
    protected LayoutType layout;

    /**
     * Gets the value of the _AbstractViewForm property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link FrameViewFormType }{@code >}
     *     {@link JAXBElement }{@code <}{@link InnerFrameViewFormType }{@code >}
     *     {@link JAXBElement }{@code <}{@link _AbstractViewFormType }{@code >}
     *     {@link JAXBElement }{@code <}{@link PaneViewFormType }{@code >}
     *     
     */
    public JAXBElement<? extends _AbstractViewFormType> get_AbstractViewForm() {
        return abstractViewForm;
    }

    /**
     * Sets the value of the _AbstractViewForm property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link FrameViewFormType }{@code >}
     *     {@link JAXBElement }{@code <}{@link InnerFrameViewFormType }{@code >}
     *     {@link JAXBElement }{@code <}{@link _AbstractViewFormType }{@code >}
     *     {@link JAXBElement }{@code <}{@link PaneViewFormType }{@code >}
     *     
     */
    public void set_AbstractViewForm(JAXBElement<? extends _AbstractViewFormType> value) {
        this.abstractViewForm = ((JAXBElement<? extends _AbstractViewFormType> ) value);
    }

    /**
     * Gets the value of the layout property.
     * 
     * @return
     *     possible object is
     *     {@link LayoutType }
     *     
     */
    public LayoutType getLayout() {
        return layout;
    }

    /**
     * Sets the value of the layout property.
     * 
     * @param value
     *     allowed object is
     *     {@link LayoutType }
     *     
     */
    public void setLayout(LayoutType value) {
        this.layout = value;
    }

}
