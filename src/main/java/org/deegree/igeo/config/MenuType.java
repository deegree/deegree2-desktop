//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.1-b02-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.04.15 at 10:29:06 AM MESZ 
//


package org.deegree.igeo.config;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlType;


/**
 * 
 * 				A menu is a kind of node (in opposite to leaf) of a tree. It is not assigned a any function but gathers one or more menus and
 * 				menu items. Beside an unique identifier a menu may have a parent. This enable adding a menu as node into another menu 
 * 				that is not defined within in same module. A menu also has:
 * 				- a name that should be a key to a property defined in messages_$language$.properties
 * 				- a tooltip that also should be a key to a property defined in messages_$language$.properties
 * 				- a reference (absolute or relative) to an icon image that should be displayed as part of the menu
 * 				- definition for mnemonic key (The mnemonic is the key which when combined with the look and feel's mouseless modifier 
 *    				   (usually Alt) will activate this button if focus is contained somewhere within this button's ancestor window. )
 *    				- definition for accelerator key (key combination which invokes the menu item's action listeners without navigating the menu hierarchy. )
 * 			
 * 
 * <p>Java class for MenuType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="MenuType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.deegree.org/coremapmodel}identifier"/>
 *         &lt;element ref="{http://www.deegree.org/project}parent" minOccurs="0"/>
 *         &lt;element name="name" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="tooltip" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="icon" type="{http://www.deegree.org/coremapmodel}OnlineResourceType" minOccurs="0"/>
 *         &lt;element ref="{http://www.deegree.org/project}mnemonic" minOccurs="0"/>
 *         &lt;element ref="{http://www.deegree.org/project}accelerator" minOccurs="0"/>
 *         &lt;choice maxOccurs="unbounded">
 *           &lt;element ref="{http://www.deegree.org/project}MenuItem"/>
 *           &lt;element ref="{http://www.deegree.org/project}Menu"/>
 *         &lt;/choice>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "MenuType", propOrder = {
    "identifier",
    "parent",
    "name",
    "tooltip",
    "icon",
    "mnemonic",
    "accelerator",
    "menuItemOrMenu"
})
public class MenuType {

    @XmlElement(namespace = "http://www.deegree.org/coremapmodel", required = true)
    protected IdentifierType identifier;
    protected IdentifierType parent;
    @XmlElement(required = true)
    protected String name;
    protected String tooltip;
    protected OnlineResourceType icon;
    protected String mnemonic;
    protected AcceleratorType accelerator;
    @XmlElements({
        @XmlElement(name = "Menu", type = MenuType.class),
        @XmlElement(name = "MenuItem", type = MenuItemType.class)
    })
    protected List<Object> menuItemOrMenu;

    /**
     * Gets the value of the identifier property.
     * 
     * @return
     *     possible object is
     *     {@link IdentifierType }
     *     
     */
    public IdentifierType getIdentifier() {
        return identifier;
    }

    /**
     * Sets the value of the identifier property.
     * 
     * @param value
     *     allowed object is
     *     {@link IdentifierType }
     *     
     */
    public void setIdentifier(IdentifierType value) {
        this.identifier = value;
    }

    /**
     * Gets the value of the parent property.
     * 
     * @return
     *     possible object is
     *     {@link IdentifierType }
     *     
     */
    public IdentifierType getParent() {
        return parent;
    }

    /**
     * Sets the value of the parent property.
     * 
     * @param value
     *     allowed object is
     *     {@link IdentifierType }
     *     
     */
    public void setParent(IdentifierType value) {
        this.parent = value;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Gets the value of the tooltip property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTooltip() {
        return tooltip;
    }

    /**
     * Sets the value of the tooltip property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTooltip(String value) {
        this.tooltip = value;
    }

    /**
     * Gets the value of the icon property.
     * 
     * @return
     *     possible object is
     *     {@link OnlineResourceType }
     *     
     */
    public OnlineResourceType getIcon() {
        return icon;
    }

    /**
     * Sets the value of the icon property.
     * 
     * @param value
     *     allowed object is
     *     {@link OnlineResourceType }
     *     
     */
    public void setIcon(OnlineResourceType value) {
        this.icon = value;
    }

    /**
     * Gets the value of the mnemonic property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getMnemonic() {
        return mnemonic;
    }

    /**
     * Sets the value of the mnemonic property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMnemonic(String value) {
        this.mnemonic = value;
    }

    /**
     * Gets the value of the accelerator property.
     * 
     * @return
     *     possible object is
     *     {@link AcceleratorType }
     *     
     */
    public AcceleratorType getAccelerator() {
        return accelerator;
    }

    /**
     * Sets the value of the accelerator property.
     * 
     * @param value
     *     allowed object is
     *     {@link AcceleratorType }
     *     
     */
    public void setAccelerator(AcceleratorType value) {
        this.accelerator = value;
    }

    /**
     * Gets the value of the menuItemOrMenu property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the menuItemOrMenu property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getMenuItemOrMenu().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link MenuType }
     * {@link MenuItemType }
     * 
     * 
     */
    public List<Object> getMenuItemOrMenu() {
        if (menuItemOrMenu == null) {
            menuItemOrMenu = new ArrayList<Object>();
        }
        return this.menuItemOrMenu;
    }

}
