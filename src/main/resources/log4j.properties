# $HeadURL: svn+ssh://developername@svn.wald.intevation.org/deegree/base/trunk/src/org/deegree/framework/log/log4j.properties $
# $Id: log4j.properties 19506 2009-09-07 11:35:29Z jmays $
#
# -------------------------------------------------------------------------------
# This file is part of deegree.
# For copyright/license information, please visit http://www.deegree.org/license.
# -------------------------------------------------------------------------------
#
# For the general syntax of property based configuration files see the
# documenation of org.apache.log4j.PropertyConfigurator.
# The root category uses the appender called deegree. Since no priority is
# specified, the root category assumes the default priority for root
# which is DEBUG in log4j. The root category is the only category that
# has a default priority. All other categories need not be assigned a
# priority in which case they inherit their priority from the
# hierarchy. 
# log levels
# 'DEBUG' (most messages)
# 'INFO'
# 'WARN'
# 'ERROR'  (only error messages)
# first argument: root log level
# remaining arguments: appenders
#log4j.rootLogger=INFO, stdout, logfile
log4j.rootLogger=INFO, stdout

# =================== output configuration ======================================
# see http://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/PatternLayout.html
# for format options

##
## Console Output Appender
##
log4j.appender.stdout=org.deegree.framework.log.DeegreeDesktopAppender
#log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=[%d{HH:mm:ss}] %5p: [%c{1}] %m%n

##
## Log File Appender ${context.name}.log
##
#log.dir=${catalina.home}/logs
#log4j.appender.logfile=org.apache.log4j.RollingFileAppender
#log4j.appender.logfile.File=${log.dir}/${context.name}.log
#log4j.appender.logfile.MaxFileSize=1000KB
## Keep one backup file
#log4j.appender.logfile.MaxBackupIndex=1
#log4j.appender.logfile.layout=org.apache.log4j.PatternLayout
#log4j.appender.logfile.layout.ConversionPattern=%d %-5p [%c] %m%n


#
# log levels for individual packages and their children
#
# the most precise entry for a package determines the effective log level 
#
#
# ================== common logging =====================
log4j.logger.org.deegree=INFO
log4j.logger.org.deegree.desktop=DEBUG

# to log processing time for web-received requests (for all services)
#log4j.logger.org.deegree.enterprise.servlet.OGCServletController=DEBUG

# to log the incoming requests
#log4j.logger.org.deegree.ogcwebservices.OGCRequestFactory=DEBUG

# to log outgoing POST requests
#log4j.logger.org.deegree.framework.util.NetWorker=DEBUG

# to log proxy settings
#log4j.logger.org.deegree.enterprise.WebUtils=DEBUG

# to log more information about direct database access e.g. used in WMS
#log4j.logger.org.deegree.io.databaseloader=DEBUG

# ================== CRS specific logging =====================
##All of the crs should be debugged.
#log4j.logger.org.deegree.crs=DEBUG

#log the deegree/proj4 CRSprovider
#log4j.logger.org.deegree.crs.configuration.deegree.DeegreeCRSProvider=DEBUG
#log4j.logger.org.deegree.crs.configuration.proj4.PROJ4CRSProvider=DEBUG
#log4j.logger.org.deegree.crs.configuration.gml.GMLCRSProvider=DEBUG

#log the CRSConfiguration.
#log4j.logger.org.deegree.crs.configuration.CRSConfiguration=DEBUG
#log4j.logger.org.deegree.model.crs.CRSFactory=DEBUG

#log the transformation factory
#log4j.logger.org.deegree.crs.transformations.TransformationFactory=DEBUG

#Information about the incoming and outgoing points of a tmerc projection
#log4j.logger.org.deegree.crs.projections.cylindric.TransverseMercator=DEBUG

#Information about the deegree interface to the crs package
#log4j.logger.org.deegree.model.crs=DEBUG

# ================== WCTS specific logging =====================
# to log request which are actually handled
#log4j.logger.org.deegree.enterprise.servlet.WCTSHandler=DEBUG

# to log the wcts as a whole
#log4j.logger.org.deegree.ogcwebservices.wcts=DEBUG

# ================== WMS specific logging =====================
# to log the XSLT used for GetFeatureInfo responses and the original GML
# additionally, the sent exceptions are being logged
#log4j.logger.org.deegree.enterprise.servlet.WMSHandler=DEBUG

# to log requests for remote services, also local data sources (eg. GetFeature requests for LOCALWFS)
#log4j.logger.org.deegree.ogcwebservices.wms.GetMapServiceInvokerForNL=DEBUG

# to log more information about interaction with WFS
#log4j.logger.org.deegree.ogcwebservices.wms.DefaultGetFeatureInfoHandler=DEBUG

# to log why layers are not shown (eg. scale)
#log4j.logger.org.deegree.ogcwebservices.wms.DefaultGetMapHandler=DEBUG

# to log more information about rendering
#log4j.logger.org.deegree.graphics.displayelements=DEBUG

# ================== WFS specific logging =====================
# to log transformation of requests and responses (XSL-processing)
#log4j.logger.org.deegree.enterprise.servlet.WFSHandler=DEBUG

#To get information about the processing time for an incoming request.
#log4j.logger.org.deegree.ogcwebservices.wfs.WFService=DEBUG

# to log Transaction stuff, writes debug files for different stages of the process for Inserts
#log4j.logger.org.deegree.ogcwebservices.wfs.TransactionHandler=DEBUG

# to log the SQL statements as they are "prepared", i.e. converted to PreparedStatements
#log4j.logger.org.deegree.io.datastore.sql.AbstractSQLDatastore=DEBUG

# to log SQL statements generated for GetFeature-requests
#log4j.logger.org.deegree.io.datastore.sql.FeatureFetcher=DEBUG
#log4j.logger.org.deegree.io.datastore.sql.QueryHandler=DEBUG
#log4j.logger.org.deegree.io.datastore.wfs.CascadingWFSDatastore=DEBUG

# to log backend-specific stuff
#log4j.logger.org.deegree.io.datastore.sql.oracle.OracleDatastore=DEBUG
#log4j.logger.org.deegree.io.datastore.sql.postgis.PostGISDatastore=DEBUG
#log4j.logger.org.deegree.io.datastore.sql.generic.GenericSQLDatastore=DEBUG
#log4j.logger.org.deegree.io.datastore.shape.ShapeDatastore=DEBUG

# to log SQL statements and internal behaviour for transactions 
#log4j.logger.org.deegree.io.datastore.sql.transaction.SQLTransaction=DEBUG
#log4j.logger.org.deegree.io.datastore.sql.transaction.UpdateHandler=DEBUG
#log4j.logger.org.deegree.io.datastore.sql.transaction.delete.DeleteHandler=DEBUG
#log4j.logger.org.deegree.io.datastore.sql.transaction.insert.InsertHandler=DEBUG

# to log identification of "equal" features on Insert + assignment of new FeatureIds
#log4j.logger.org.deegree.io.datastore.idgenerator.FeatureIdAssigner=DEBUG

# to activate validation of incoming geometries (reject invalid geometries on insert)
#log4j.logger.org.deegree.model.feature.Validator=DEBUG

# to log normalisation results
#log4j.logger.org.deegree.model.filterencoding.FunctionNormalize=DEBUG

# ================== WCS specific logging =====================
#To output oracle dependend debug statements 
#log4j.logger.org.deegree.io.oraclegeoraster=DEBUG

# ================== CSW specific logging =====================
#log4j.logger.org.deegree.ogcwebservices.csw.discovery.Discovery=DEBUG

# ================== WPVS specific logging =====================
# To see all debug messages of the wpvs
#log4j.logger.org.deegree.ogcwebservices.wpvs=DEBUG

#info about the incoming buildings
#log4j.logger.org.deegree.ogcwebservices.wpvs.j3d.Object3DFactory=DEBUG

# to see the working progress of a getview request
#log4j.logger.org.deegree.ogcwebservices.wpvs.DefaultGetViewHandler=DEBUG

# debugging the different datasources
#log4j.logger.org.deegree.ogcwebservices.wpvs.utils.ResolutionStripe=DEBUG
#To see the requests send to the datasources.
#log4j.logger.org.deegree.ogcwebservices.wpvs.WFSInvoker=DEBUG
#log4j.logger.org.deegree.ogcwebservices.wpvs.WMSInvoker=DEBUG
#log4j.logger.org.deegree.ogcwebservices.wpvs.WCSInvoker=DEBUG

# ================== PORTAL specific logging =====================
##All of the portal should be debugged.
#log4j.logger.org.deegree.portal=DEBUG

# ================== Tools ======================================
#Output debug for the View3DFile program
#log4j.logger.org.deegree.tools.app3d.View3DFile=DEBUG
#log4j.logger.org.deegree.tools.app3d.J3DToCityGMLExporter=DEBUG

# ================== Demo ======================================
#log4j.logger.org.deegree.demo.TestWPVS=DEBUG
